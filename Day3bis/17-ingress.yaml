kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: test-ingress-nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http: #by path
      paths:
        - path: /nginx1
          backend:
            serviceName: nginx-service
            servicePort: 80
  - host: bckd2.org #by host header
    http: 
      paths:
      - path: /
        backend:
          serviceName: nginx-service-2
          servicePort: 80
---

apiVersion: v1
kind:       ConfigMap
metadata:
  name: 'nginx-test-1'
data:
  test-value: "value1"
---
apiVersion: v1
kind:       ConfigMap
metadata:
  name: 'nginx-test-2'
data:
  test-value: 'value2'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'nginx-test-1'
spec:
  selector:
    matchLabels:
       app: 'nginx-test-1'
  template:
   metadata:
    labels:
       app: 'nginx-test-1'
   spec:
     containers:
      - name: nginx
        image: registry.gitlab.onlineterroir.com/omega/public-reg/nginx:latest
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/nginx/html
     volumes:
      - name: config-volume
        configMap:
          name: nginx-test-1
          items:
            - key: "test-value"
              path: "index.html"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'nginx-test-2'
spec:
  selector:
    matchLabels:
       app: 'nginx-test-2'
  template:
   metadata:
    labels:
       app: 'nginx-test-2'
   spec:
     containers:
      - name: nginx
        image: registry.gitlab.onlineterroir.com/omega/public-reg/nginx:latest
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/nginx/html
     volumes:
      - name: config-volume
        configMap:
          name: nginx-test-2
          items:
            - key: "test-value"
              path: "index.html"
---
apiVersion: v1
kind:       Service
metadata:
  name: 'nginx-test-1'
spec:
  selector:
    app: 'nginx-test-1'
  ports:
    - name: "http"
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind:       Service
metadata:
  name: 'nginx-test-2'
spec:
  selector:
    app: 'nginx-test-2'
  ports:
    - name: "http"
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: 'nginx-test-1'
  annotations:
   nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: 'blablabla.com'
      http:
       paths:
         - pathType: Prefix
           path: "/"
           backend:
             service:
               name: "nginx-test-1"
               port:
                  number: 80
  ingressClassName: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: 'nginx-test-2'
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: 'blablabla.com'
      http:
       paths:
         - pathType: Prefix
           path: "/test2"
           backend:
             service:
               name: "nginx-test-2"
               port:
                 number: 80
    - host: 'blablabla2.com'
      http:
       paths:
         - pathType: Prefix
           path: "/"
           backend:
             service:
               name: "nginx-test-2"
               port:
                  number: 80
  ingressClassName: nginx
---

apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
spec:
  controller: k8s.io/ingress-nginx